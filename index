main.jsx


import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
// import './index.css'
import App from './App.jsx'

createRoot(document.getElementById('root')).render(
  <StrictMode>
    <App />
  </StrictMode>,
)

<-------------------------------- Next -------------------------------->

app.jsx:



// import React from "react";
// // import { useSelector, useDispatch } from "react-redux";
// // import { decrement, increment } from "./App/store";
// import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
// import Home from "./home.jsx"



// export default function App() {
//   // const count = useSelector((state) => state.counter.value);
//   // const dispatch = useDispatch();

//   return (
//     <Router>
//       <Routes>
//         <Route path="/" element={<Home />} />
//       </Routes>
//     </Router>
//     // <div style={{ textAlign: "center", marginTop: "50px", }}>
      
//     //   <h1>Apna Counter</h1>
//     //   <h2>{count}</h2>
//     //   <br />
//     //   <table style={{ textAlign: "center", margin: "0 auto" }}>
//     //     <tbody>
//     //       <tr>
//     //         <td>
//     //           <button onClick={() => dispatch(increment())}>+</button>
//     //         </td>
//     //         <td>
//     //           <button onClick={() => dispatch(decrement())}>-</button>
//     //         </td>
//     //       </tr>
//     //     </tbody>
//     //   </table>
//     // </div>
//   );
// }


import React from "react";
import { Provider } from "react-redux";
// import { store } from "./store/store";
import ProductList from "./components/ProductList";
import Navbar from "./components/Navbar";
import { store } from "./App/store";

export default function App() {
  return (
    <Provider store={store}>
      <Navbar />
      <ProductList />
    </Provider>
  );
}

<-------------------------------- Next -------------------------------->

home.jsx:


import React from 'react'
import Navbar from './components/Navbar'

export default function Home() {
  return (
    <div>
      <Navbar/>
    </div>
  )
}

<-------------------------------- Next -------------------------------->

./Slice/ProductSlice.jsx:



// src/store/productSlice.js
import { createSlice, createAsyncThunk } from "@reduxjs/toolkit";

// âœ… Async Thunk for API call
export const fetchProducts = createAsyncThunk(
  "products/fetchProducts",
  async () => {
    const res = await fetch("https://fakestoreapi.com/products");
    const data = await res.json();
    return data;
  }
);

const productSlice = createSlice({
  name: "products",
  initialState: {
    items: [],
    loading: false,
    error: null,
  },
  reducers: {},
  extraReducers: (builder) => {
    builder
      .addCase(fetchProducts.pending, (state) => {
        state.loading = true;
      })
      .addCase(fetchProducts.fulfilled, (state, action) => {
        state.loading = false;
        state.items = action.payload;
      })
      .addCase(fetchProducts.rejected, (state, action) => {
        state.loading = false;
        state.error = action.error.message;
      });
  },
});

export default productSlice.reducer;


<-------------------------------- Next -------------------------------->

./component/Navbar.jsx:

import * as React from "react";
import AppBar from "@mui/material/AppBar";
import Box from "@mui/material/Box";
import Toolbar from "@mui/material/Toolbar";
import IconButton from "@mui/material/IconButton";
import Typography from "@mui/material/Typography";
import Badge from "@mui/material/Badge";
import MenuIcon from "@mui/icons-material/Menu";
import ShoppingCartIcon from "@mui/icons-material/ShoppingCart";
import MoreIcon from "@mui/icons-material/MoreVert";
import Menu from "@mui/material/Menu";
import MenuItem from "@mui/material/MenuItem";

export default function Navbar() {
  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);

  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);

  const handleMobileMenuClose = () => {
    setMobileMoreAnchorEl(null);
  };

  const handleMobileMenuOpen = (event) => {
    setMobileMoreAnchorEl(event.currentTarget);
  };

  const mobileMenuId = "primary-search-account-menu-mobile";
  const renderMobileMenu = (
    <Menu
      anchorEl={mobileMoreAnchorEl}
      anchorOrigin={{
        vertical: "top",
        horizontal: "right",
      }}
      id={mobileMenuId}
      keepMounted
      transformOrigin={{
        vertical: "top",
        horizontal: "right",
      }}
      open={isMobileMenuOpen}
      onClose={handleMobileMenuClose}
    >
      <MenuItem>
        <IconButton size="large" color="inherit">
          <Badge badgeContent={3} color="error">
            <ShoppingCartIcon />
          </Badge>
        </IconButton>
        <p>Cart</p>
      </MenuItem>
    </Menu>
  );

  return (
    <Box sx={{ flexGrow: 1 }}>
      <AppBar position="static">
        <Toolbar>
          {/* Left Menu Icon */}
          <IconButton
            size="large"
            edge="start"
            color="inherit"
            aria-label="open drawer"
            sx={{ mr: 2 }}
          >
            <MenuIcon />
          </IconButton>

          {/* Logo / Title */}
          <Typography
            variant="h6"
            noWrap
            component="div"
            sx={{ display: { xs: "none", sm: "block" } }}
          >
            MUI
          </Typography>

          <Box sx={{ flexGrow: 1 }} />

          {/* Desktop Cart Icon */}
          <Box sx={{ display: { xs: "none", md: "flex" } }}>
            <IconButton size="large" color="inherit">
              <Badge badgeContent={3} color="error">
                <ShoppingCartIcon />
              </Badge>
            </IconButton>
          </Box>

          {/* Mobile Menu Icon */}
          <Box sx={{ display: { xs: "flex", md: "none" } }}>
            <IconButton
              size="large"
              aria-label="show more"
              aria-controls={mobileMenuId}
              aria-haspopup="true"
              onClick={handleMobileMenuOpen}
              color="inherit"
            >
              <MoreIcon />
            </IconButton>
          </Box>
        </Toolbar>
      </AppBar>
      {renderMobileMenu}
    </Box>
  );
}

<-------------------------------- Next -------------------------------->

./components/ProductList.jsx:


import React, { useEffect } from "react";
import { useDispatch, useSelector } from "react-redux";
import { fetchProducts } from "../Slice/ProductSlice";
import {
  Card,
  CardContent,
  CardMedia,
  Typography,
  Grid,
  CircularProgress,
} from "@mui/material";

export default function ProductList() {
  const dispatch = useDispatch();
  const { items, loading, error } = useSelector((state) => state.products);

  useEffect(() => {
    dispatch(fetchProducts());
  }, [dispatch]);

  if (loading) return <CircularProgress />;
  if (error) return <h2>Error: {error}</h2>;

  return (
    <Grid container spacing={2} sx={{ padding: 2 }}>
      {items.map((product) => (
        <Grid item xs={12} sm={6} md={4} lg={3} key={product.id}>
          <Card sx={{ maxWidth: 345 }}>
            <CardMedia
              component="img"
              height="200"
              image={product.image}
              alt={product.title}
              sx={{ objectFit: "contain", padding: 2 }}
            />
            <CardContent>
              <Typography variant="h6" noWrap>
                {product.title}
              </Typography>
              <Typography variant="body2" color="text.secondary" noWrap>
                {product.description}
              </Typography>
              <Typography variant="h6" color="primary">
                ${product.price}
              </Typography>
            </CardContent>
          </Card>
        </Grid>
      ))}
    </Grid>
  );
}



<-------------------------------- Next -------------------------------->



./App/Store.jsx:


// import { configureStore, createSlice } from '@reduxjs/toolkit'


// const counterSlice = createSlice({
//   name: 'counter',
//   initialState: { value: 0 },
//   reducers: {
//     increment: (state) => { state.value++ },
//     decrement: (state) => {
//       if (state.value > 0) {  
//         state.value--
//       }
//     }
//   }
// })

// export const { increment, decrement } = counterSlice.actions

// export const store = configureStore({
//   reducer: {
//     counter: counterSlice.reducer
//   }
// })
// src/store/store.js
import { configureStore } from "@reduxjs/toolkit";
import productReducer from "../Slice/ProductSlice";

export const store = configureStore({
  reducer: {
    products: productReducer,
  },
});

<-------------------------------- End -------------------------------->
<-------------------------------- End -------------------------------->
<-------------------------------- End -------------------------------->
